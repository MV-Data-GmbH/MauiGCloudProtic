@model GCloud.Controllers.ViewModels.Company.CompanyCreateViewModel

@{
    ViewBag.Title = "Unternehmen hinzufügen";
}

<h2>Unternehmen hinzufügen</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(model => model.LogoData, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <img src="/Content/No-Image-Available.png" id="Logo" height="50" />
        <input type="hidden" name="LogoData" id="LogoData" />
        <input type="file" id="LogoDataFile" style="margin-top: 10px;" />
        @Html.ValidationMessageFor(model => model.LogoData, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaxNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaxNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CommercialRegisterNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CommercialRegisterNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CommercialRegisterNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsCashbackEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.IsCashbackEnabled, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsCashbackEnabled, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AssociatedUserId, "Benutzer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.AssociatedUserId, ViewBag.UserId as SelectList, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AssociatedUserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AwardPoints, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AwardPoints, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AwardPoints, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RegistrationPoints, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RegistrationPoints, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegistrationPoints, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Hinzufügen" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-info">
        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
        Zurück
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function getBase64(file) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                $("#LogoData").val(reader.result);
                $("#Logo").attr("src", reader.result);
                console.log(reader.result);
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };
        }

        $(document).ready(function () {
            $("#LogoDataFile").change(function() {
                var logoFile = $("#LogoDataFile")[0].files[0];
                getBase64(logoFile);
            });
            $('#SelectedTags').tagsinput({
                confirmKeys: [13, 44]
            });

        });
    </script>
}
