@using GCloud.Models.Charts
@model IList<GCloud.Models.Charts.ColumnDataModel>

@{
    ViewBag.Title = "Gutschein-Verbrauch";
    var showNavBar = Request.Params.Get("fullscreen") == null; ;
}
@Scripts.Render("~/bundles/moment")
@Styles.Render("~/Content/daterangepicker")
@Scripts.Render("~/bundles/daterangepicker")
@if (!showNavBar)
{
    <style>
        body {
            padding-top: 0;
        }

        div.navbar.navbar-default {
            display: none;
        }

        div.cc-window {
            display: none;
        }
    </style>
}
<h2>Gutschein-Verbrauch nach Zeit</h2>
@if (showNavBar)
{
    using (Html.BeginForm("CouponUsagePerTime", "Reports", FormMethod.Get))
    {
        <div class="well well-lg alert-info">
            <label>Zeitraum:</label>
            <input type="text" id="date-range" />
            <input type="hidden" name="dateFrom" id="dateFrom" />
            <input type="hidden" name="dateTo" id="dateTo" />
            <input type="submit" class="btn btn-primary" value="Anwenden" id="show-report" />
        </div>
    }
}
@section scripts {
    @if (Model.Count != 0)
    {
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            google.charts.load('current', { packages: ['corechart', 'bar'] });
            google.charts.setOnLoadCallback(drawStacked);

            function drawStacked() {
                var data = new google.visualization.DataTable();
                data.addColumn('timeofday', 'Element');
                data.addColumn('number', 'Anzahl Einlösungen');
                data.addColumn({type:'string', role:'style'});
                data.addRows([
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        var item = Model[i];
                        <text>[[@Html.Raw(item.Name), 0, 0], @item.Value, '@ChartColors.Colors[i % ChartColors.Colors.Length]'],</text>
                    }
                ]);

                @{
                    var minHour = int.Parse(Model.Min(x => x.Name));
                    var maxHour = int.Parse(Model.Max(x => x.Name));
                }

                var options = {
                    chartArea: { 'width': '90%' },
                    title: '',
                    isStacked: false,
                    hAxis: {
                        title: 'Gutscheine',
                        ticks: [
                            @for (int i = minHour; i <= maxHour; i++)
                            {
                                <text>[@i, 0, 0],</text>
                            }
                        ]
                    }
                };

                var chart = new google.visualization.ColumnChart(document.getElementById('chart-outer-div'));
                chart.draw(data, options);
            }

            $(document).ready(function() {
                $(window).resize(function() {
                    drawStacked();
                });
            });
        </script>

    }

    <script type="text/javascript">
        $(document).ready(function () {
            var startString = '@Request.Params["dateFrom"]';
            var endString = '@Request.Params["dateTo"]';
            var start, end;

            if (startString === '') {
                start = moment().subtract(1, 'weeks');
            } else {
                start = moment(startString);
            }
            if (endString === '') {
                end = moment();
            } else {
                end = moment(endString);
            }
            $("#date-range").daterangepicker({
                startDate: start,
                endDate: end,
                locale: {
                    format: 'DD/MM/YYYY'
                }
            });

            $("#show-report").click(function(event) {
                var value = $("#date-range").val();
                var from = value.split("-")[0].trim();
                var to = value.split("-")[1].trim();
                $("#dateFrom").val(moment(from, "DD-MM-YYYY").toISOString());
                $("#dateTo").val(moment(to, "DD-MM-YYYY").toISOString());
            });
        });
    </script>
}
<div class="layout-row" style="height: 70vh">
    <div class="flex-100  flex-column-fill">
        <div id="chart-outer-div" class="flex-column-fill flex-row-fill">
            Keine Daten verfügbar
        </div>
    </div>
</div>